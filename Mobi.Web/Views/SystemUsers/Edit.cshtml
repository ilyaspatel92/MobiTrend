@model RegisterModel

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2"></div>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="card card-warning">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title">@T("Mobi.SystemUser.EditTitle")</h3>
                    <a asp-action="Index" class="btn btn-secondary btn-sm">
                        <i class="fas fa-arrow-left"></i> @T("Mobi.SystemUser.BackToList")
                    </a>
                </div>

                <div class="card-body">
                    @if (ViewData.ModelState != null && !ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <ul>
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@error.ErrorMessage</li>
                                }
                            </ul>
                        </div>
                    }

                    <form asp-action="Edit" method="post">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="EmployeeName">@T("Mobi.SystemUser.EmployeeName")</label>
                                    <input asp-for="EmployeeName" class="form-control" placeholder="@T("Mobi.SystemUser.EmployeeName.Placeholder")" readonly />
                                    <span asp-validation-for="EmployeeName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="UserName">@T("Mobi.SystemUser.UserName")</label>
                                    <input asp-for="UserName" class="form-control" placeholder="@T("Mobi.SystemUser.UserName.Placeholder")" />
                                </div>
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-md-12">
                                <h5>@T("Mobi.SystemUser.ScreenAuthority")</h5>
                                <div id="authority-list">
                                    @foreach (var authority in Enum.GetValues(typeof(ScreenAuthorityEnum)))
                                    {
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="@authority" name="authorities" value="@authority">
                                            <label class="form-check-label" for="@authority">@authority</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="row mt-4">
                            <div class="col-12 d-flex justify-content-end">
                                <button type="submit" class="btn btn-warning me-2">
                                    <i class="fas fa-edit"></i> @T("Mobi.SystemUser.Update")
                                </button>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-times"></i> @T("Mobi.SystemUser.Cancel")
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let selectedUserId = @Model.Id;

        fetchAccess(selectedUserId);

        function fetchAccess(userId) {
            fetch(`/AccessControl/GetAccessForEmployee?userId=${userId}`)
                .then((response) => response.json())
                .then((data) => {
                    document.querySelectorAll("input[name='authorities']").forEach((input) => {
                        input.checked = false;
                    });
                    data.forEach((item) => {
                        const authorityInput = document.querySelector(`#authority-list input[value='${item.screenAuthority}']`);
                        if (authorityInput) {
                            authorityInput.checked = true;
                        }
                    });
                })
                .catch(() => {
                    alert("@T("Mobi.SystemUser.ErrorFetchingAccess")");
                });
        }

        // SaveAccess button not defined in markup but kept JS logic if added later
        const saveBtn = document.getElementById("saveAccess");
        if (saveBtn) {
            saveBtn.addEventListener("click", function () {
                if (selectedUserId === 0) {
                    alert("@T("Mobi.SystemUser.SelectEmployeeFirst")");
                    return;
                }

                const selectedAuthorities = Array.from(document.querySelectorAll("input[name='authorities']:checked")).map(input => input.value);

                fetch(`/AccessControl/SaveAccess`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ userId: selectedUserId, authorities: selectedAuthorities })
                })
                    .then(response => {
                        if (response.ok) {
                            alert("@T("Mobi.SystemUser.SaveSuccess")");
                            location.reload();
                        } else {
                            alert("@T("Mobi.SystemUser.SaveError")");
                        }
                    })
                    .catch(() => {
                        alert("@T("Mobi.SystemUser.SaveError")");
                    });
            });
        }
    });
</script>
