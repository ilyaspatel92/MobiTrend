@model RegisterModel

<div class="content-wrapper">
    <!-- Page Header -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
            </div>
        </div>
    </section>

    <!-- Main Content -->
    <section class="content">
        <div class="container-fluid">
            <div class="card card-warning">
                <div class="card-header">
                    <h3 class="card-title">Edit System User</h3>
                    <div class="card-tools">
                        <a asp-action="Index" class="btn btn-secondary btn-sm">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Display Validation Errors -->
                    @if (ViewData.ModelState != null && !ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <ul>
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@error.ErrorMessage</li>
                                }
                            </ul>
                        </div>
                    }

                    <!-- Form -->
                    <form asp-action="Edit" method="post">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="EmployeeName">Employee Name</label>
                                    <input asp-for="EmployeeName" class="form-control" placeholder="Enter employee name" readonly/>
                                    <span asp-validation-for="EmployeeName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="UserName">User Name</label>
                                    <input asp-for="UserName" class="form-control" placeholder="Enter username" readonly />
                                    <span asp-validation-for="UserName" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                       

                      

                        <!-- Access Control Section -->
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <h5>Screen Authority</h5>
                                <div id="authority-list">
                                    @foreach (var authority in Enum.GetValues(typeof(ScreenAuthorityEnum)))
                                    {
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="@authority" name="authorities" value="@authority">
                                            <label class="form-check-label" for="@authority">@authority</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="row">
                            <div class="col-12 d-flex justify-content-end">
                                <button type="submit" class="btn btn-warning me-2">
                                    <i class="fas fa-edit"></i> Update
                                </button>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-times"></i> Cancel
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let selectedUserId = @Model.Id; // Current user ID from the model

        // Fetch access control for the user when the page loads
        fetchAccess(selectedUserId);

        // Fetch access for selected employee
        function fetchAccess(userId) {
            fetch(`/AccessControl/GetAccessForEmployee?userId=${userId}`)
                .then((response) => response.json())
                .then((data) => {
                    // Clear all checkboxes first
                    document.querySelectorAll("input[name='authorities']").forEach((input) => {
                        input.checked = false;
                    });

                    // Select the checkboxes for the authorities returned by the server
                    data.forEach((item) => {
                        const authorityInput = document.querySelector(
                            `#authority-list input[value='${item.screenAuthority}']`
                        );
                        if (authorityInput) {
                            authorityInput.checked = true;
                        }
                    });
                })
                .catch(() => {
                    alert("Error fetching access for the selected employee.");
                });
        }

        // Handle save access
        document.getElementById("saveAccess").addEventListener("click", function () {
            if (selectedUserId === 0) {
                alert("Please select an employee first.");
                return;
            }

            const selectedAuthorities = Array.from(document.querySelectorAll("input[name='authorities']:checked")).map(input => input.value);

            fetch(`/AccessControl/SaveAccess`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ userId: selectedUserId, authorities: selectedAuthorities })
            })
                .then(response => {
                    if (response.ok) {
                        alert("Access saved successfully.");
                        location.reload(); // Reload to show TempData message if required
                    } else {
                        alert("Error saving access control.");
                    }
                })
                .catch(() => {
                    alert("Error saving access control.");
                });
        });
    });
</script>
