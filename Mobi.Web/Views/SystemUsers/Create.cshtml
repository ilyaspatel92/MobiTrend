@{
    ViewData["Title"] = "System User";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-info text-white">
            <h3 class="card-title mb-0">System User</h3>
        </div>
        <div class="card-body">
            <!-- Notification Section -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- Form Section -->
            <form id="userForm">
                <div class="row mb-3">
                    <div class="col-md-6 position-relative">
                        <label for="EmployeeName" class="form-label">Employee Name</label>
                        <input id="EmployeeName" class="form-control" placeholder="Enter 3 characters to search" autocomplete="off" />
                        <ul id="EmployeeNameDropdown" class="list-group position-absolute mt-1" style="display: none; z-index: 1000;"></ul>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="UserName" class="form-label">User Name</label>
                        <input id="UserName" class="form-control" placeholder="User Name" readonly />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h5>Screen Authority</h5>
                        <div id="authority-list">
                            @foreach (var authority in Enum.GetValues(typeof(ScreenAuthorityEnum)))
                            {
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" id="@authority" name="authorities" value="@authority">
                                    <label class="form-check-label" for="@authority">@authority</label>
                                </div>
                            }
                        </div>
                    </div>
                </div>                
                <div class="d-flex justify-content-end mt-3">
                    <a href="@Url.Action("index")" class="btn btn-light">
                        Cancel
                    </a>
                    <button id="saveAccess" type="button" class="btn btn-success">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let selectedUserId = 0;
        const employeeNameInput = document.getElementById("EmployeeName");
        const employeeNameDropdown = document.getElementById("EmployeeNameDropdown");
        const userNameInput = document.getElementById("UserName");

        // Adjust Dropdown
        function adjustDropdownWidth() {
            employeeNameDropdown.style.width = `${employeeNameInput.offsetWidth}px`;
        }

        employeeNameInput.addEventListener("focus", adjustDropdownWidth);
        window.addEventListener("resize", adjustDropdownWidth);

        employeeNameInput.addEventListener("input", function () {
            const term = employeeNameInput.value;

            if (term.length < 3) {
                employeeNameDropdown.style.display = "none";
                return;
            }

            employeeNameDropdown.innerHTML = '<li class="list-group-item">Loading...</li>';
            employeeNameDropdown.style.display = "block";

            fetch(`/SystemUsers/GetEmployeeNames?term=${term}`)
                .then((response) => response.json())
                .then((data) => {
                    employeeNameDropdown.innerHTML = "";
                    if (data.length === 0) {
                        employeeNameDropdown.innerHTML = '<li class="list-group-item text-muted">No record found</li>';
                    } else {
                        data.forEach((item) => {
                            const option = document.createElement("li");
                            option.textContent = item.nameEng;
                            option.setAttribute("data-id", item.id);
                            option.setAttribute("data-username", item.userName);
                            option.classList.add("list-group-item");
                            option.style.cursor = "pointer";
                            option.addEventListener("click", function () {
                                employeeNameInput.value = item.nameEng;
                                userNameInput.value = item.userName || "";
                                selectedUserId = item.id;
                                employeeNameDropdown.style.display = "none";
                                fetchAccess(selectedUserId);
                            });
                            employeeNameDropdown.appendChild(option);
                        });
                    }
                })
                .catch(() => {
                    employeeNameDropdown.innerHTML = '<li class="list-group-item text-danger">Error fetching data</li>';
                });
        });

        document.addEventListener("click", function (event) {
            if (!employeeNameInput.contains(event.target) && !employeeNameDropdown.contains(event.target)) {
                employeeNameDropdown.style.display = "none";
            }
        });

        function fetchAccess(userId) {
            fetch(`/SystemUsers/GetAccessForEmployee?userId=${userId}`)
                .then((response) => response.json())
                .then((data) => {
                    document.querySelectorAll("input[name='authorities']").forEach((input) => {
                        input.checked = false;
                    });
                    data.forEach((item) => {
                        const checkbox = document.querySelector(`#authority-list input[value='${item.screenAuthority}']`);
                        if (checkbox) checkbox.checked = true;
                    });
                })
                .catch(() => alert("Error fetching access."));
        }

        document.getElementById("saveAccess").addEventListener("click", function () {
            if (selectedUserId === 0) {
                alert("Please select an employee first.");
                return;
            }

            const selectedAuthorities = Array.from(document.querySelectorAll("input[name='authorities']:checked"))
                .map(input => input.value);

            fetch(`/SystemUsers/SaveAccess`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userId: selectedUserId, authorities: selectedAuthorities })
            })
                .then(response => {
                    if (response.ok) {
                        alert("Access saved successfully.");
                         window.location.href = "/systemusers/index";
                    } else {
                        alert("Error saving access.");
                    }
                })
                .catch(() => alert("Error saving access."));
        });
    });
</script>
