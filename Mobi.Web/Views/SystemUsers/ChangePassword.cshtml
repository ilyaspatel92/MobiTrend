@{
    ViewData["Title"] = @T("Mobi.ChangePassword.Title");
}
@model ChangePasswordModel

<div class="container mt-5">
    <div class="card p-4 shadow">
        <h3 class="text-center mb-4">@T("Mobi.ChangePassword.Header")</h3>
        <form asp-action="ChangePassword" method="post">
            <div class="mb-3">
                <label for="OldPassword" class="form-label">@T("Mobi.ChangePassword.CurrentPassword")</label>
                <div class="input-group">
                    <input type="password" asp-for="OldPassword" class="form-control" placeholder="@T("Mobi.ChangePassword.CurrentPasswordPlaceholder")" />
                    <button type="button" class="btn btn-outline-secondary toggle-password">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="OldPassword" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label for="NewPassword" class="form-label">@T("Mobi.ChangePassword.NewPassword")</label>
                <div class="input-group">
                    <input type="password" asp-for="NewPassword" id="new-password" class="form-control" placeholder="@T("Mobi.ChangePassword.NewPasswordPlaceholder")" />
                    <button type="button" class="btn btn-outline-secondary toggle-password">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                <div id="password-feedback" class="form-text"></div>
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label for="ConfirmNewPassword" class="form-label">@T("Mobi.ChangePassword.ConfirmPassword")</label>
                <div class="input-group">
                    <input type="password" asp-for="ConfirmNewPassword" class="form-control" placeholder="@T("Mobi.ChangePassword.ConfirmPasswordPlaceholder")" />
                    <button type="button" class="btn btn-outline-secondary toggle-password">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">@T("Mobi.ChangePassword.ButtonChange")</button>
                <a href="javascript:history.back();" class="btn btn-outline-info">@T("Mobi.ChangePassword.ButtonCancel")</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const passwordInput = document.getElementById('new-password');
            const feedback = document.getElementById('password-feedback');
            const confirmPasswordInput = document.getElementById('confirm-password');

            if (passwordInput) {
                passwordInput.addEventListener('input', () => {
                    const value = passwordInput.value;
                    let feedbackText = '';
                    let feedbackClass = 'text-danger';

                    if (value.length === 0) {
                        feedbackText = '';
                    } else if (value.length < 6) {
                        feedbackText = '@T("Mobi.ChangePassword.FeedbackTooShort")';
                    } else if (!/[A-Z]/.test(value)) {
                        feedbackText = '@T("Mobi.ChangePassword.FeedbackUppercase")';
                    } else if (!/[a-z]/.test(value)) {
                        feedbackText = '@T("Mobi.ChangePassword.FeedbackLowercase")';
                    } else if (!/[0-9]/.test(value)) {
                        feedbackText = '@T("Mobi.ChangePassword.FeedbackNumber")';
                    } else if (!/[!@@#$%^&*]/.test(value)) {
                        feedbackText = '@T("Mobi.ChangePassword.FeedbackSpecialChar")';
                    } else {
                        feedbackText = '@T("Mobi.ChangePassword.FeedbackStrong")';
                        feedbackClass = 'text-success';
                    }

                    feedback.textContent = feedbackText;
                    feedback.className = `form-text ${feedbackClass}`;
                });
            }

            confirmPasswordInput?.addEventListener('input', () => {
                if (confirmPasswordInput.value !== passwordInput.value) {
                    confirmPasswordInput.setCustomValidity('@T("Mobi.ChangePassword.Mismatch")');
                } else {
                    confirmPasswordInput.setCustomValidity('');
                }
            });

            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', () => {
                    const input = button.previousElementSibling;
                    if (input.type === 'password') {
                        input.type = 'text';
                        button.innerHTML = '<i class="bi bi-eye-slash"></i>';
                    } else {
                        input.type = 'password';
                        button.innerHTML = '<i class="bi bi-eye"></i>';
                    }
                });
            });
        });
    </script>
}
