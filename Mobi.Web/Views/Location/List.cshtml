@model IEnumerable<LocationModel>
<div class="card card-info card-outline mb-4 mx-3 custom-top-spacing">
    <!-- Header Section -->
    <div class="card-header bg-white py-3 border-bottom">
        <div class="d-flex justify-content-between align-items-center">
            <!-- Title -->
            <h5 class="fw-bold mb-0">Location List</h5>
            <!-- Buttons -->
            <div class="d-flex gap-2">
                <a href="@Url.Action("Create", "Location")" class="btn btn-success btn-sm">Add Location</a>
            </div>
        </div>
            <form id="searchForm" method="get" action="@Url.Action("List", "Location")">
            <!-- begin::Card Body -->
            <div class="card-body">
                <div class="row g-4">
                    <!-- Spacing between form elements -->
                    <!-- Search by Name -->
                    <div class="col-md-6">
                        <label for="searchByName" class="form-label">Search by Name</label>
                        <input type="text" id="searchByName" name="name" class="form-control" placeholder="Enter Name" />
                    </div>

                    <!-- Search by ID -->
                    <div class="col-md-6">
                        <label for="status" class="form-label">Search by Status</label>
                        <select id="searchByStatus" name="searchByStatus" class="form-control">
                            <option value="">All</option>
                            <option value="True">Active</option>
                            <option value="False">Inactive</option>
                        </select>
                    </div>
                </div> <!-- end::Row -->
            </div> <!-- end::Card Body -->
            <!-- begin::Card Footer -->
            <div class="card-footer d-flex justify-content-end">
                <button type="submit" class="btn btn-primary px-4">Search</button>
            </div> <!-- end::Card Footer -->
        </form>
    </div>
</div>

<div class="app-content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-12">
                    <div class="card-header">
                        <h3 class="card-title">Location Table</h3>
                    </div>
                    <div class="card-body">
                        <table class="table table-bordered" id="locationTable">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Location Name (English)</th>
                                    <th>Location Name (Arabic)</th>
                                    <th>ProofType</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- If not using AJAX, render the rows server-side -->
                                @foreach (var location in Model)
                                {
                                    <tr class="align-middle">
                                        <td>@location.Id</td>
                                        <td>@location.LocationNameEnglish</td>
                                        <td>@location.LocationNameArabic</td>
                                        <td>@Enum.GetName(typeof(ProofType), location.ProofType)</td>
                                        <td>
                                            <a href="@Url.Action("Details", "Location", new { id = location.Id })" class="btn btn-info btn-sm">Details</a>
                                            <a href="@Url.Action("Edit", "Location", new { id = location.Id })" class="btn btn-primary btn-sm">Edit</a>
                                            <a href="@Url.Action("Delete", "Location", new { id = location.Id })" class="btn btn-danger btn-sm">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/dataTables.bootstrap5.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/dataTables.bootstrap5.min.css" />

    <script>
        $(document).ready(function () {
            var table = $('#locationTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetLocations", "Location")',
                    type: 'GET',
                    data: function (d) {
                        d.name = $('#searchByName').val();
                        d.status = $('#searchByStatus').val();
                    },
                    dataType: 'json',
                    dataSrc: function (json) {
                        return json.data;
                    }
                },
                columns: [
                    { data: 'id' },
                    { data: 'locationNameEnglish' },
                    { data: 'locationNameArabic' },
                    { data: 'proofTypeName' },
                    {
                        data: null,
                        render: function (data) {
                            return `
                                <a href="/Location/Details/${data.id}" class="btn btn-info btn-sm">Details</a>
                                <a href="/Location/Edit/${data.id}" class="btn btn-primary btn-sm">Edit</a>
                                <button class="btn btn-danger btn-sm delete-btn" data-id="${data.id}">Delete</button>
                            `;
                        }
                    }
                ],
                processing: true,
                serverSide: false,
                paging: true,
                searching: false,
                lengthChange: true,
                pageLength: 10,
                language: {
                    paginate: {
                        previous: "Previous",
                        next: "Next"
                    },
                    info: "Showing _START_ to _END_ of _TOTAL_ entries (filtered from _MAX_ total entries)"
                }
            });

            $('#searchForm').on('submit', function (e) {
                e.preventDefault();
                table.ajax.reload();
            });

            // Handle delete button click
        $('#locationTable').on('click', '.delete-btn', function () {
            var id = $(this).data('id');
            if (confirm("Are you sure you want to delete this location?")) {
                $.ajax({
                    url: '/Location/Delete/' + id,
                    type: 'POST',
                    data: {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // Add token here
                    },
                    success: function (response) {
                        alert("Location deleted successfully!");
                        table.ajax.reload(); // Refresh the table data
                    },
                    error: function () {
                        alert("Failed to delete the Location.");
                    }
                });
            }
        });
        });
    </script>
}
