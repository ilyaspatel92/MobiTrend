@{
    ViewData["Title"] = @T("Mobi.AccessControl.Title");
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-info text-white">
            <h3 class="card-title mb-0">@T("Mobi.AccessControl.CardTitle")</h3>
        </div>
        <div class="card-body">
            <!-- Notification Section -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="@T("Mobi.Common.Close")"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="@T("Mobi.Common.Close")"></button>
                </div>
            }

            <!-- Form Section -->
            <div class="row mb-3">
                <div class="col-md-6 position-relative">
                    <label for="EmployeeName" class="form-label">@T("Mobi.AccessControl.EmployeeNameLabel")</label>
                    <input id="EmployeeName" class="form-control" placeholder="@T("Mobi.AccessControl.EmployeeNamePlaceholder")" />
                    <ul id="EmployeeNameDropdown" class="list-group position-absolute mt-1" style="display: none; z-index: 1000;"></ul>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <h5>@T("Mobi.AccessControl.ScreenAuthorityTitle")</h5>
                    <div id="authority-list">
                        @foreach (var authority in Enum.GetValues(typeof(ScreenAuthorityEnum)))
                        {
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="@authority" name="authorities" value="@authority">
                                <label class="form-check-label" for="@authority">@authority</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-end mt-3">
                <button id="saveAccess" class="btn btn-success">@T("Mobi.AccessControl.SaveButton")</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let selectedUserId = 0; // Holds the currently selected user ID

        const employeeNameInput = document.getElementById("EmployeeName");
        const employeeNameDropdown = document.createElement("ul");
        employeeNameDropdown.setAttribute("id", "EmployeeNameDropdown");
        employeeNameDropdown.setAttribute(
            "style",
            "list-style: none; padding: 0; margin: 0; border: 1px solid #ccc; display: none; position: absolute; background: white; max-height: 200px; overflow-y: auto; width: 100%; z-index: 1000;"
        );
        employeeNameInput.parentNode.appendChild(employeeNameDropdown);

        // Adjust the dropdown width dynamically
        function adjustDropdownWidth() {
            const inputRect = employeeNameInput.getBoundingClientRect();
            employeeNameDropdown.style.width = `${inputRect.width}px`;
        }

        window.addEventListener("resize", adjustDropdownWidth);
        employeeNameInput.addEventListener("focus", adjustDropdownWidth);

        employeeNameInput.addEventListener("input", function () {
            const term = employeeNameInput.value;

            if (term.length < 3) {
                employeeNameDropdown.style.display = "none";
                return;
            }

            fetch(`/AccessControl/GetEmployeeNames?term=${term}`)
                .then((response) => response.json())
                .then((data) => {
                    employeeNameDropdown.innerHTML = "";

                    if (data.length === 0) {
                        const noRecordOption = document.createElement("li");
                        noRecordOption.textContent = "@T("Mobi.AccessControl.NoRecordFound")";
                        noRecordOption.setAttribute("style", "padding: 5px; color: #888;");
                        employeeNameDropdown.appendChild(noRecordOption);
                    } else {
                        data.forEach((item) => {
                            const option = document.createElement("li");
                            option.textContent = item.employeeName;
                            option.setAttribute("data-id", item.id);
                            option.setAttribute("style", "padding: 5px; cursor: pointer;");
                            option.addEventListener("click", function () {
                                employeeNameInput.value = item.employeeName;
                                selectedUserId = item.id; // Update selected user ID
                                employeeNameDropdown.style.display = "none";
                                fetchAccess(selectedUserId); // Fetch and update selected authorities
                            });
                            employeeNameDropdown.appendChild(option);
                        });
                    }

                    employeeNameDropdown.style.display = "block";
                })
                .catch(() => {
                    employeeNameDropdown.innerHTML = "";
                    const errorOption = document.createElement("li");
                    errorOption.textContent = "@T("Mobi.AccessControl.ErrorFetchingData")";
                    errorOption.setAttribute("style", "padding: 5px; color: red;");
                    employeeNameDropdown.appendChild(errorOption);
                    employeeNameDropdown.style.display = "block";
                });
        });

        document.addEventListener("click", function (event) {
            if (!employeeNameInput.contains(event.target) && !employeeNameDropdown.contains(event.target)) {
                employeeNameDropdown.style.display = "none";
            }
        });

        // Fetch access for selected employee
        function fetchAccess(userId) {
            fetch(`/AccessControl/GetAccessForEmployee?userId=${userId}`)
                .then((response) => response.json())
                .then((data) => {
                    // Clear all checkboxes first
                    document.querySelectorAll("input[name='authorities']").forEach((input) => {
                        input.checked = false;
                    });

                    // Select the checkboxes for the authorities returned by the server
                    data.forEach((item) => {
                        const authorityInput = document.querySelector(
                            `#authority-list input[value='${item.screenAuthority}']`
                        );
                        if (authorityInput) {
                            authorityInput.checked = true;
                        }
                    });
                })
                .catch(() => {
                    alert("@T("Mobi.AccessControl.FetchAccessError")");
                });
        }

        // Handle save access
        document.getElementById("saveAccess").addEventListener("click", function () {
            if (selectedUserId === 0) {
                alert("@T("Mobi.AccessControl.SelectEmployeeAlert")");
                return;
            }

            const selectedAuthorities = Array.from(document.querySelectorAll("input[name='authorities']:checked")).map(input => input.value);

            fetch(`/AccessControl/SaveAccess`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ userId: selectedUserId, authorities: selectedAuthorities })
            })
                .then(response => {
                    if (response.ok) {
                        alert("@T("Mobi.AccessControl.AccessSavedSuccess")");
                        location.reload(); // Reload to show TempData message if required
                    } else {
                        alert("@T("Mobi.AccessControl.AccessSaveError")");
                    }
                })
                .catch(() => {
                    alert("@T("Mobi.AccessControl.AccessSaveError")");
                });
        });
    });
</script>
